{
    /********** VSpaceCode boilerplate **********/
    // https://github.com/VSpaceCode/VSpaceCode/blob/master/src/configuration/settings.jsonc
    "vim.easymotion": true, // Vim easymotion is required for Jump menu - <SPC> j
    // "vim.useSystemClipboard": true,
    // Trigger the main which key menu with in the active editor with vim
    // This cannot be put into keybindings.json because it will
    // create conflict with Vim.
    // https://github.com/stevenguh/spacecode/issues/3
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    /********** Custom VSpaceCode bindings **********/
    "vspacecode.bindingOverrides": [
        {
            "keys": "g.a",
            "name": "Apply",
            "icon": "gather",
            "type": "command",
            "command": "magit.apply-at-point",
        },
        {
            "keys": "g.A",
            "name": "+Cherry-pick",
            "icon": "gather",
            "type": "command",
            "command": "magit.cherry-picking",
        },
        {
            "keys": "g.b",
            "name": "+Branch",
            "icon": "git-branch",
            "type": "command",
            "command": "magit.branching",
        },
        {
            "keys": "g.c",
            "name": "+Commit",
            "icon": "git-commit",
            "type": "command",
            "command": "magit.commit",
        },
        {
            "keys": "g.d",
            "name": "+Diff",
            "icon": "diff",
            "type": "command",
            "command": "magit.diffing",
        },
        {
            "keys": "g.f",
            "name": "+Fetch",
            "icon": "repo-sync",
            "type": "command",
            "command": "magit.fetching",
        },
        {
            "keys": "g.F",
            "name": "+Pull",
            "icon": "repo-pull",
            "type": "command",
            "command": "magit.fetching",
        },
        {
            "keys": "g.I",
            "name": "+Ignore",
            "icon": "diff-ignored",
            "type": "command",
            "command": "magit.ignoring",
        },
        {
            "keys": "g.l",
            "name": "+Log",
            "icon": "list-flat",
            "type": "command",
            "command": "magit.logging",
        },
        {
            "keys": "g.m",
            "name": "+Merge",
            "icon": "git-merge",
            "type": "command",
            "command": "magit.merging",
        },
        {
            "keys": "g.M",
            "name": "+Remote",
            "icon": "cloud",
            "type": "command",
            "command": "magit.remoting",
        },
        {
            "keys": "g.P",
            "name": "+Push",
            "icon": "repo-push",
            "type": "command",
            "command": "magit.pushing",
        },
        {
            "keys": "g.r",
            "name": "+Rebase",
            "icon": "repo-forked",
            "type": "command",
            "command": "magit.rebasing",
        },
        {
            "keys": "g.s",
            //"name": "Stage",
            "name": "Stage File",
            "icon": "file-add",
            "type": "command",
            //"command": "magit.stage",
            "command": "magit.stage-file",
        },
        {
            "keys": "g.S",
            "name": "Stage All",
            "icon": "expand-all",
            "type": "command",
            "command": "magit.stage-all",
        },
        {
            "keys": "g.t",
            "name": "+Tag",
            "icon": "tag",
            "type": "command",
            "command": "magit.tagging",
        },
        {
            "keys": "g.u",
            //"name": "Unstage",
            "name": "Unstage File",
            "icon": "file",
            "type": "command",
            //"command": "magit.unstage",
            "command": "magit.unstage-file",
        },
        {
            "keys": "g.U",
            "name": "Unstage All",
            "icon": "collapse-all",
            "type": "command",
            "command": "magit.unstage-all",
        },
        {
            "keys": "g._",
            "name": "+Revert",
            "icon": "discard",
            "type": "command",
            "command": "magit.reverting",
        },
        {
            "keys": "g.O",
            "name": "+Reset",
            "icon": "trash",
            "type": "command",
            "command": "magit.resetting",
        },
        //{
        //    "keys": "g.x",
        //    "name": "Discard",
        //    "icon": "discard",
        //    "type": "command",
        //    "command": "magit.discard-at-point",
        //},
        {
            "keys": "g.y",
            "name": "+Show Refs",
            "icon": "clippy",
            "type": "command",
            "command": "vspacecode.showMagitRefMenu",
        },
        {
            "keys": "g.z",
            "name": "+Stash",
            "icon": "archive",
            "type": "command",
            "command": "magit.stashing",
        },
        {
            "keys": "g.!",
            "name": "+Run",
            "icon": "rocket",
            "type": "command",
            "command": "magit.running",
        },
        {
            "keys": "g.%",
            "name": "+Worktree",
            "icon": "list-tree",
            "type": "command",
            "command": "magit.worktree",
        },
        {
            "keys": "g.o",
            "name": "+Submodules",
            "icon": "file-submodule",
            "type": "command",
            "command": "magit.submodules",
        },
        {
            "keys": "g.$",
            "name": "Process Log",
            "icon": "output",
            "type": "command",
            "command": "magit.process-log",
        },

        {
            "keys": "g.B",
            "name": "+Blame",
            "icon": "organization",
            "type": "bindings",
            "bindings": [
                {
                    "key": "B",
                    "name": "Blame file with GitLens",
                    "type": "command",
                    "icon": "file",
                    "command": "gitlens.toggleFileBlame",
                },
                {
                    "key": "b",
                    "name": "Blame file with magit",
                    "type": "command",
                    "icon": "file",
                    "command": "magit.blame-file",
                },
                {
                    "key": "p",
                    "name": "Blame previous change",
                    "type": "command",
                    "icon": "clock",
                    "command": "gitlens.openBlamePriorToChange",
                },
                {
                    "key": "s",
                    "name": "Show commit details",
                    "type": "command",
                    "icon": "eye",
                    "command": "gitlens.showQuickCommitDetails"
                }
            ]
        },
        {
            "keys": "g.L",
            "name": "View log graph",
            "type": "command",
            "icon": "git-commit",
            "command": "git-graph.view",
        },
        {
            "keys": "g.g",
            "name": "Magit status",
            "type": "command",
            "command": "magit.status",
            "icon": "rocket",
        },
        {
            "keys": "g.G",
            "name": "GitLens Commands",
            "type": "command",
            "command": "gitlens.gitCommands",
            "icon": "rocket",
        },
        {
            "keys": "g.h",
            "name": "+GitHub",
            "icon": "github",
            "type": "bindings",
            "bindings": [
                {
                    "key": "a",
                    "name": "Open GitHub Actions",
                    "icon": "github-action",
                    "type": "command",
                    "command": "workbench.view.extension.github-actions",
                },
                {
                    "key": "o",
                    "name": "Open permalink on GitHub",
                    "icon": "globe",
                    "type": "command",
                    "command": "issue.openGithubPermalink",
                },
                {
                    "key": "O",
                    "name": "Open remote repository",
                    "icon": "remote",
                    "type": "command",
                    "command": "remoteHub.openRepository",
                },
                {
                    "key": "y",
                    "name": "Copy GitHub permalink",
                    "icon": "link",
                    "type": "command",
                    "command": "issue.copyGithubPermalink",
                },
                {
                    "key": "Y",
                    "name": "Copy GitHub permalink as Markdown",
                    "icon": "markdown",
                    "type": "command",
                    "command": "issue.copyMarkdownGithubPermalink",
                },
                {
                    "key": "p",
                    "name": "+PRs",
                    "icon": "git-pull-request",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "p",
                            "name": "Show pull requests",
                            "icon": "eye",
                            "type": "command",
                            "command": "pr:github.focus",
                        },
                        {
                            "key": "c",
                            "name": "Create pull request",
                            "icon": "git-pull-request-create",
                            "type": "command",
                            "command": "pr.create",
                        },
                    ]
                },
                {
                    "key": "i",
                    "name": "+Issues",
                    "icon": "issues",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "i",
                            "name": "Show issues",
                            "icon": "eye",
                            "type": "command",
                            "command": "issues:github.focus",
                        },
                        {
                            "key": "c",
                            "name": "Create issue",
                            "icon": "issues",
                            "type": "command",
                            "command": "issue.createIssue",
                        },
                        {
                            "key": "s",
                            "name": "Create issue from selection",
                            "icon": "selection",
                            "type": "command",
                            "command": "issue.createIssueFromSelection",
                        },
                        {
                            "key": "S",
                            "name": "Create issue from clipboard",
                            "icon": "clippy",
                            "type": "command",
                            "command": "issue.createIssueFromClipboard",
                        },
                    ]
                }
            ]
        },
        {
            "keys": "g.H",
            "name": "+GitLab",
            "icon": "github-alt",  // close enough...
            "type": "bindings",
            "bindings": [
                {
                    "key": "/",
                    "name": "GitLab project search",
                    "icon": "search",
                    "type": "command",
                    "command": "gl.projectAdvancedSearch",
                },
                {
                    "key": "a",
                    "name": "GitLab Pipeline Actions",
                    "icon": "github-action",
                    "type": "command",
                    "command": "gl.pipelineActions",
                },
                {
                    "key": "A",
                    "name": "Validate GitLab CI config",
                    "icon": "check",
                    "type": "command",
                    "command": "gl.validateCIConfig",
                },
                {
                    "key": "d",
                    "name": "GitLab compare current branch with master",
                    "icon": "diff",
                    "type": "command",
                    "command": "gl.compareCurrentBranch",
                },
                {
                    "key": "o",
                    "name": "Open permalink on GitLab",
                    "icon": "globe",
                    "type": "command",
                    "command": "gl.openActiveFile",
                },
                {
                    "key": "O",
                    "name": "Open remote repository",
                    "icon": "remote",
                    "type": "command",
                    "command": "gl.openRepository",
                },
                {
                    "key": "y",
                    "name": "Copy GitLab permalink",
                    "icon": "link",
                    "type": "command",
                    "command": "gl.copyLinkToActiveFile",
                },
                {
                    "key": "p",
                    "name": "+MRs",
                    "icon": "git-pull-request",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "p",
                            "name": "Show merge requests",
                            "icon": "eye",
                            "type": "command",
                            "command": "issuesAndMrs.focus",
                        },
                        {
                            "key": "P",
                            "name": "Show merge requests assigned to me",
                            "icon": "person",
                            "type": "command",
                            "command": "gl.showMergeRequestsAssignedToMe",
                        },
                        {
                            "key": "/",
                            "name": "Search project MRs",
                            "icon": "search",
                            "type": "command",
                            "command": "gl.mergeRequestSearch",
                        },
                        {
                            "key": "c",
                            "name": "Create merge request from current branch",
                            "icon": "git-branch",
                            "type": "command",
                            "command": "gl.openCurrentMergeRequest",
                        },
                        {
                            "key": "C",
                            "name": "Create merge request",
                            "icon": "git-pull-request-create",
                            "type": "command",
                            "command": "gl.openCreateNewMR",
                        },
                    ]
                },
                {
                    "key": "s",
                    "name": "+Snippets",
                    "icon": "symbol-snippet",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "c",
                            "name": "Create snippet",
                            "icon": "add",
                            "type": "command",
                            "command": "gl.createSnippet",
                        },
                        {
                            "key": "i",
                            "name": "Insert snippet",
                            "icon": "pencil",
                            "type": "command",
                            "command": "gl.insertSnippet",
                        }
                    ]
                },
                {
                    "key": "i",
                    "name": "+Issues",
                    "icon": "issues",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "i",
                            "name": "Show issues",
                            "icon": "eye",
                            "type": "command",
                            "command": "issuesAndMrs.focus",
                        },
                        {
                            "key": "I",
                            "name": "Show issues assigned to me",
                            "icon": "person",
                            "type": "command",
                            "command": "gl.showIssuesAssignedToMe",
                        },
                        {
                            "key": "/",
                            "name": "Search project issues",
                            "icon": "search",
                            "type": "command",
                            "command": "gl.issueSearch",
                        },
                        {
                            "key": "c",
                            "name": "Create issue",
                            "icon": "issues",
                            "type": "command",
                            "command": "gl.openCreateNewIssue",
                        },
                    ]
                }
            ]
        },

        {
            "keys": "h.z",
            "name": "Zeal for current text",
            "icon": "library",
            "type": "command",
            "command": "extension.dash.specific",
        },
        {
            "keys": "h.Z",
            "name": "Open Zeal",
            "type": "command",
            "icon": "library",
            "command": "extension.dash.emptySyntax",
        },
        {
            "keys": "f.y.i",
            "name": "Yank image (CodeSnap)",
            //"icon": "device-camera",
            "type": "command",
            "command": "codesnap.start",
        },

        // better project menu
        {
            "keys": "p.o",
            "name": "Open folder",
            "icon": "folder-opened",
            "type": "command",
            "command": "workbench.action.files.openFolder",
        },
        {
            "keys": "p.p",
            "name": "Open project",
            "icon": "project",
            "type": "command",
            "command": "projectManager.listProjects",
        },
        {
            "keys": "p.P",
            "name": "Open project in new window",
            "icon": "empty-window",
            "type": "command",
            "command": "projectManager.listProjectsNewWindow",
        },
        {
            "keys": "p.m",
            "name": "+Project manager",
            "icon": "gear",
            "type": "bindings",
            "bindings": [
                {
                    "key": "r",
                    "name": "Refresh projects",
                    "icon": "refresh",
                    "type": "command",
                    "command": "projectManager.refreshProjects"
                },
                {
                    "key": "e",
                    "name": "Edit projects",
                    "icon": "edit",
                    "type": "command",
                    "command": "projectManager.editProjects"
                },
                {
                    "key": "s",
                    "name": "Save project",
                    "icon": "save",
                    "type": "command",
                    "command": "projectManager.saveProject"
                },
                {
                    "key": "v",
                    "name": "View sidebar",
                    "icon": "eye",
                    "type": "command",
                    "command": "workbench.view.extension.project-manager"
                }
            ]
        },
        {
            "keys": "p.s",
            "name": "Open SSH remote project",
            "icon": "remote-explorer",
            "type": "command",
            "command": "opensshremotes.openEmptyWindow",
        },

        // swap JSON/GUI settings
        {
            "keys": "f.e.D",
            "name": "Open settings",
            "icon": "settings-gear",
            "type": "command",
            "command": "workbench.action.openGlobalSettings"
        },
        {
            "keys": "f.e.K",
            "name": "Open global key bindings",
            "icon": "keyboard",
            "type": "command",
            "command": "workbench.action.openGlobalKeybindings"
        },
        {
            "keys": "f.e.W",
            "name": "Open workspace settings",
            "icon": "settings-edit",
            "type": "command",
            "command": "workbench.action.openWorkspaceSettings"
        },
        {
            "keys": "f.e.d",
            "name": "Open settings JSON",
            "icon": "json",
            "type": "command",
            "command": "workbench.action.openSettingsJson"
        },
        {
            "keys": "f.e.k",
            "name": "Open global key bindings JSON",
            "icon": "json",
            "type": "command",
            "command": "workbench.action.openGlobalKeybindingsFile"
        },
        {
            "keys": "f.e.w",
            "name": "Open workspace settings JSON",
            "icon": "json",
            "type": "command",
            "command": "workbench.action.openWorkspaceSettingsFile"
        },

        // Add extension binding
        {
            "keys": "f.e.e",
            "name": "Show extensions",
            "icon": "extensions",
            "type": "command",
            "command": "workbench.view.extensions"
        },
        {
            "keys": "f.e.E",
            "name": "Install extension from VSIX",
            "icon": "package",
            "type": "command",
            "command": "workbench.extensions.action.installVSIX"
        },

        // Developer bindings
        // based on https://github.com/VSpaceCode/community-configs/tree/master/macintacos
        {
            "keys": "f.e.v",
            "name": "+Developer",
            "icon": "bug",
            "type": "bindings",
            "bindings": [
                {
                    "command": "workbench.action.toggleDevTools",
                    "key": "d",
                    "name": "Show developer tools",
                    "icon": "bug",
                    "type": "command"
                },
                {
                    "command": "workbench.action.setLogLevel",
                    "key": "l",
                    "name": "Set log level...",
                    "icon": "output",
                    "type": "command"
                },
                {
                    "command": "workbench.action.showLogs",
                    "key": "L",
                    "name": "Show logs...",
                    "icon": "eye",
                    "type": "command"
                },
                {
                    "command": "workbench.action.showRuntimeExtensions",
                    "key": "r",
                    "name": "Show running extensions",
                    "icon": "extensions",
                    "type": "command"
                },
                {
                    "command": "workbench.action.openProcessExplorer",
                    "key": "p",
                    "name": "Open Process Explorer",
                    "icon": "server-process",
                    "type": "command"
                }
            ],
        },

        // Duplicate file
        {
            "keys": ["f", "C"],
            "name": "Duplicate (clone) file",
            "icon": "files",
            "type": "command",
            "command": "duplicate.execute"
        },

        // Additional testing Python bindings
        {
            "keys": ["m", "languageId:python", "t", "B"],
            "name": "Debug current test file",
            "icon": "file",
            "type": "command",
            "command": "testing.debugCurrentFile",
        },
        {
            "keys": ["m", "languageId:python", "t", "R"],
            "name": "Debug failed tests",
            "icon": "x",
            "type": "command",
            "command": "testing.debugFailTests",
        },
        {
            "keys": ["m", "languageId:python", "t", "c"],
            "name": "Run test at cursor",
            "icon": "whole-word",
            "type": "command",
            "command": "testing.runAtCursor",
        },
        {
            "keys": ["m", "languageId:python", "t", "C"],
            "name": "Debug test at cursor",
            "icon": "whole-word",
            "type": "command",
            "command": "testing.debugAtCursor",
        },
        {
            "keys": ["m", "languageId:python", "t", "."],
            "name": "Rerun last run",
            "icon": "refresh",
            "type": "command",
            "command": "testing.reRunLastRun",
        },
        {
            "keys": ["m", "languageId:python", "t", ","],
            "name": "Debug last run",
            "icon": "refresh",
            "type": "command",
            "command": "testing.debugLastRun",
        },
        {
            "keys": ["m", "languageId:python", "t", "j"],
            "name": "Go to next failure",
            "icon": "arrow-down",
            "type": "command",
            "command": "testing.goToNextMessage",
        },
        {
            "keys": ["m", "languageId:python", "t", "k"],
            "name": "Go to previous failure",
            "icon": "arrow-up",
            "type": "command",
            "command": "testing.goToPreviousMessage",
        },
        {
            "keys": ["m", "languageId:python", "t", "p"],
            "name": "Peek output",
            "icon": "eye",
            "type": "command",
            "command": "testing.openOutputPeek",
        },
        {
            "keys": ["m", "languageId:python", "t", "o"],
            "name": "Show output",
            "icon": "eye",
            "type": "command",
            "command": "testing.showMostRecentOutput",
        },
        {
            "keys": ["m", "languageId:python", "t", "v"],
            "name": "Show testing panel",
            "icon": "eye",
            "type": "command",
            "command": "workbench.view.testing.focus",
        },
        {
            "keys": ["m", "languageId:python", "t", "O"],
            "name": "Toggle inline output",
            "icon": "eye",
            "type": "command",
            "command": "testing.toggleInlineTestOutput",
        },
        {
            "keys": ["m", "languageId:python", "t", "x"],
            "name": "Cancel run",
            "icon": "x",
            "type": "command",
            "command": "testing.cancelRun",
        },

        // Python tests via test-explorer
        // {
        //     "keys": ["m", "languageId:python", "t", "a"],
        //     "name": "Run all tests",
        //     "icon": "beaker",
        //     "type": "command",
        //     "command": "test-explorer.run-all",
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "b"],
        //     "name": "Run current test file",
        //     "icon": "file",
        //     "type": "command",
        //     "command": "test-explorer.run-file",
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "r"],
        //     "name": "Re-run tests",
        //     "icon": "sync",
        //     "type": "command",
        //     "command": "test-explorer.rerun"
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "R"],
        //     "name": "Re-run tests in debugger",
        //     "icon": "bug",
        //     "type": "command",
        //     "command": "test-explorer.redebug"
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "t"],
        //     "name": "Run test under cursor",
        //     "icon": "whole-word",
        //     "type": "command",
        //     "command": "test-explorer.run-test-at-cursor"
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "T"],
        //     "name": "Debug test under cursor",
        //     "icon": "bug",
        //     "type": "command",
        //     "command": "test-explorer.debug-test-at-cursor"
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "c"],
        //     "name": "Cancel running tests",
        //     "icon": "close",
        //     "type": "command",
        //     "command": "test-explorer.cancel"
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "C"],
        //     "name": "Refresh tests",
        //     "icon": "refresh",
        //     "type": "command",
        //     "command": "test-explorer.refresh",
        // },
        // {
        //     "keys": ["m", "languageId:python", "t", "v"],
        //     "name": "Focus test explorer view",
        //     "icon": "eye",
        //     "type": "command",
        //     "command": "test-explorer.focus"
        // },

        // Tox integration
        {
            "keys": ["m", "languageId:python", "c", "t"],
            "name": "+Tox",
            "icon": "play",
            "type": "bindings",
            "bindings": [
                {
                    "key": "t",
                    "name": "Run tox",
                    "icon": "play",
                    "type": "command",
                    "command": "python-tox.select"
                },
                {
                    "key": "T",
                    "name": "Run tox with arguments",
                    "icon": "play-circle",
                    "type": "command",
                    "command": "python-tox.selectWithArgs"
                },
                {
                    "key": "m",
                    "name": "Run tox (multiple)",
                    "icon": "run-all",
                    "type": "command",
                    "command": "python-tox.selectMultiple"
                },
                {
                    "key": "M",
                    "name": "Run tox (multiple) with arguments",
                    "icon": "run-all",
                    "type": "command",
                    "command": "python-tox.selectMultipleWithArgs"
                },
                {
                    "key": "?",
                    "name": "Show tox documentation",
                    "icon": "book",
                    "type": "command",
                    "command": "python-tox.openDocs"
                }
            ]
        },

        // Arduino integration
        {
            "keys": ["m", "languageId:cpp", "a"],
            "name": "+Arduino",
            "type": "bindings",
            "icon": "circuit-board",
            "bindings": [
                {
                    "key": "c",
                    "name": "Verify",
                    "icon": "gear",
                    "type": "command",
                    "command": "arduino.verify",
                },
                {
                    "key": "u",
                    "name": "Upload",
                    "icon": "zap",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "u",
                            "name": "Upload",
                            "icon": "zap",
                            "type": "command",
                            "command": "arduino.upload",
                        },
                        {
                            "key": "U",
                            "name": "Upload Using Programmer",
                            "icon": "plug",
                            "type": "command",
                            "command": "arduino.uploadUsingProgrammer",
                        },
                        {
                            "key": "c",
                            "name": "CLI Upload",
                            "icon": "terminal",
                            "type": "command",
                            "command": "arduino.cliUpload",
                        },
                        {
                            "key": "C",
                            "name": "CLI Upload Using Programmer",
                            "icon": "plug",
                            "type": "command",
                            "command": "arduino.cliUploadUsingProgrammer",
                        },
                    ],
                },
                {
                    "key": "r",
                    "name": "Rebuild IntelliSense Configuration",
                    "icon": "refresh",
                    "type": "command",
                    "command": "arduino.rebuildIntelliSenseConfig",
                },
                {
                    "key": "b",
                    "name": "+Board",
                    "icon": "circuit-board",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "c",
                            "name": "Board config",
                            "icon": "gear",
                            "type": "command",
                            "command": "arduino.showBoardConfig",
                        },
                        {
                            "key": "m",
                            "name": "Board manager",
                            "icon": "tools",
                            "type": "command",
                            "command": "arduino.showBoardManager",
                        },
                        {
                            "key": "b",
                            "name": "Change board type",
                            "icon": "circuit-board",
                            "type": "command",
                            "command": "arduino.changeBoardType",
                        },
                    ],
                },
                {
                    "key": "p",
                    "name": "+Port",
                    "icon": "plug",
                    "type": "bindings",
                    "bindings": [
                        {
                            "key": "b",
                            "name": "Change Baud Rate",
                            "icon": "pulse",
                            "type": "command",
                            "command": "arduino.changeBaudRate",
                        },
                        {
                            "key": "m",
                            "name": "Open Serial Monitor",
                            "icon": "eye",
                            "type": "command",
                            "command": "arduino.openSerialMonitor",
                        },
                        {
                            "key": "M",
                            "name": "Close Serial Monitor",
                            "icon": "eye-closed",
                            "type": "command",
                            "command": "arduino.closeSerialMonitor",
                        },
                        {
                            "key": "p",
                            "name": "Select Serial Port",
                            "icon": "plug",
                            "type": "command",
                            "command": "arduino.selectSerialPort",
                        },
                        {
                            "key": "P",
                            "name": "Select Programmer",
                            "icon": "zap",
                            "type": "command",
                            "command": "arduino.selectProgrammer",
                        },
                        {
                            "key": "t",
                            "name": "Send Text to Serial Port",
                            "icon": "symbol-text",
                            "type": "command",
                            "command": "arduino.sendMessageToSerialPort",
                        },
                    ],
                },
                {
                    "key": "e",
                    "name": "Show examples",
                    "icon": "file-code",
                    "type": "command",
                    "command": "arduino.showExamples",
                },
                {
                    "key": "E",
                    "name": "Show examples in explorer",
                    "icon": "list-tree",
                    "type": "command",
                    "command": "arduinoExampleExplorer.focus",
                },
                {
                    "key": "i",
                    "name": "Initialize",
                    "icon": "new-file",
                    "type": "command",
                    "command": "arduino.initialize",
                },
                {
                    "key": "l",
                    "name": "Library Manager",
                    "icon": "library",
                    "type": "command",
                    "command": "arduino.showLibraryManager",
                },
                {
                    "key": "s",
                    "name": "Select sketch",
                    "icon": "files",
                    "type": "command",
                    "command": "arduino.selectSketch",
                },
            ]
        },

        // Asciidoc mode
        {
            "keys": [
                "m",
                "languageId:asciidoc"
            ],
            "name": "Asciidoc",
            "type": "bindings",
            "bindings": [
                {
                    "key": "p",
                    "name": "Show preview",
                    "type": "command",
                    "command": "asciidoc.showPreviewToSide",
                },
                {
                    "key": "P",
                    "name": "Show preview in new tab",
                    "type": "command",
                    "command": "asciidoc.showPreview",
                }
            ]
        },

        // Monkey C mode
        {
            "keys": [
                "m",
                "languageId:monkeyc"
            ],
            "name": "Monkey C",
            "type": "bindings",
            "bindings": [
                {
                    "key": "m",
                    "name": "Manifest",
                    "type": "bindings",
                    "icon": "checklist",
                    "bindings": [
                        {
                            "key": "a",
                            "name": "Edit application",
                            "icon": "tools",
                            "type": "command",
                            "command": "monkeyc.editApplication",
                        },
                        {
                            "key": "A",
                            "name": "Edit annotations",
                            "icon": "ellipsis",
                            "type": "command",
                            "command": "monkeyc.editAnnotations",
                        },
                        {
                            "key": "d",
                            "name": "Edit products",
                            "icon": "watch",
                            "type": "command",
                            "command": "monkeyc.editProducts",
                        },
                        {
                            "key": "D",
                            "name": "Set Products by Version",
                            "icon": "star-empty",
                            "type": "command",
                            "command": "monkeyc.setProductsByProductCategory",
                        },
                        {
                            "key": "p",
                            "name": "Edit permissions",
                            "icon": "unlock",
                            "type": "command",
                            "command": "monkeyc.editPermissions",
                        },
                        {
                            "key": "l",
                            "name": "Edit languages",
                            "icon": "globe",
                            "type": "command",
                            "command": "monkeyc.editLanguages",
                        },
                        {
                            "key": "b",
                            "name": "Edit monkey barrel",
                            "icon": "library",
                            "type": "command",
                            "command": "monkeyc.configureBarrel",
                        },
                        {
                            "key": "u",
                            "name": "Regenerate UUID",
                            "icon": "refresh",
                            "type": "command",
                            "command": "monkeyc.regenerateUUID",
                        },
                    ]
                },
                {
                    "key": "s",
                    "name": "Setup / SDK",
                    "type": "bindings",
                    "icon": "archive",
                    "bindings": [
                        {
                            "key": "d",
                            "name": "Show docs",
                            "icon": "book",
                            "type": "command",
                            "command": "monkeyc.viewDocumentation"
                        },
                        {
                            "key": "v",
                            "name": "Verify installation",
                            "icon": "check",
                            "type": "command",
                            "command": "monkeyc.verifyInstallation",
                        },
                        {
                            "key": "s",
                            "name": "Show samples",
                            "icon": "book",
                            "type": "command",
                            "command": "monkeyc.samples",
                        },
                        {
                            "key": "k",
                            "name": "Generate developer key",
                            "icon": "key",
                            "type": "command",
                            "command": "monkeyc.generateDeveloperKey",
                        },
                        {
                            "key": "m",
                            "name": "Open SDK manager",
                            "icon": "package",
                            "type": "command",
                            "command": "monkeyc.openSdkManager",
                        },
                    ]
                },
                {
                    "key": "b",
                    "name": "Build",
                    "type": "bindings",
                    "icon": "gear",
                    "bindings": [
                        {
                            "key": "b",
                            "name": "Build current project",
                            "icon": "gear",
                            "type": "command",
                            "command": "monkeyc.buildCurrentProject",
                        },
                        {
                            "key": "d",
                            "name": "Build for device",
                            "icon": "watch",
                            "type": "command",
                            "command": "monkeyc.buildForDevice",
                        },
                        {
                            "key": "e",
                            "name": "Export project",
                            "icon": "export",
                            "type": "command",
                            "command": "monkeyc.exportProject",
                        },
                        {
                            "key": "o",
                            "name": "Optimized",
                            "type": "bindings",
                            "icon": "dashboard",
                            "bindings": [
                                {
                                    "key": "b",
                                    "name": "Build optimized project",
                                    "icon": "gear",
                                    "type": "command",
                                    "command": "prettiermonkeyc.buildOptimizedProject",
                                },
                                {
                                    "key": "r",
                                    "name": "Build and run optimized project",
                                    "icon": "play",
                                    "type": "command",
                                    "command": "prettiermonkeyc.runOptimizedProject",
                                },
                                {
                                    "key": "c",
                                    "name": "Clean optimized project",
                                    "icon": "trash",
                                    "type": "command",
                                    "command": "prettiermonkeyc.cleanOptimizedBuild",
                                },
                                {
                                    "key": "g",
                                    "name": "Generate optimized project",
                                    "icon": "files",
                                    "type": "command",
                                    "command": "prettiermonkeyc.generateOptimizedProject",
                                },
                                {
                                    "key": "e",
                                    "name": "Export optimized project",
                                    "icon": "export",
                                    "type": "command",
                                    "command": "prettiermonkeyc.exportOptimizedProject",
                                },
                            ]
                        }
                    ]
                },
                {
                    "key": "t",
                    "name": "Run tests",
                    "icon": "beaker",
                    "type": "command",
                    "command": "monkeyc.runTests",
                },
                {
                    "key": "n",
                    "name": "New project",
                    "icon": "new-folder",
                    "type": "command",
                    "command": "monkeyc.newProject"
                },
                {
                    "key": "a",
                    "name": "SDK applications",
                    "type": "bindings",
                    "icon": "rocket",
                    "bindings": [
                        {
                            "key": "g",
                            "name": "Launch Monkey Graph",
                            "icon": "graph-line",
                            "type": "command",
                            "command": "monkeyc.launchMonkeyGraph",
                        },
                        {
                            "key": "m",
                            "name": "Launch Monkey Motion",
                            "icon": "squirrel",
                            "type": "command",
                            "command": "monkeyc.launchMonkeyMotion",
                        },
                        {
                            "key": "e",
                            "name": "Launch Error Reporting (ERA Viewer)",
                            "icon": "error",
                            "type": "command",
                            "command": "monkeyc.launchEraViewer",
                        },
                    ]
                }
            ],

        },

        // Live share bindings
        {
            "keys": "L",
            "name": "+Live Share",
            "icon": "live-share",
            "type": "bindings",
            "bindings": [
                {
                    //"keys": ["f", "when:liveshare:hasCollaborators"],
                    "key": "f",
                    "name": "Follow participant",
                    "icon": "pin",
                    "type": "conditional",
                    "bindings": [
                        {
                            "key": "!liveshare.isFollowing",
                            "name": "default",
                            "icon": "pin",
                            "type": "command",
                            "command": "liveshare.follow",
                        },
                        {
                            "key": "liveshare.isFollowing",
                            "name": "Unfollow participant",
                            "icon": "pinned",
                            "type": "command",
                            "command": "liveshare.unfollow",
                        }
                    ]
                },
                {
                    //"keys": ["/", "when:liveshare:hasCollaborators"],
                    "key": "/",
                    "name": "Follow participant to the side",
                    "icon": "pin",
                    "type": "command",
                    "command": "liveshare.followToTheSide",
                },
                {
                    //"keys": ["!", "when:liveshare:hasCollaborators"],
                    "key": "!",
                    "name": "Focus participants",
                    "icon": "megaphone",
                    "type": "command",
                    "command": "liveshare.focusParticipants",
                },
                {
                    "key": "s",
                    "name": "Start session",
                    "icon": "live-share",
                    "type": "command",
                    "command": "liveshare.start",
                },
                {
                    //"keys": ["j", "when:liveshare.state != 'Joined' && liveshare.state != 'Shared'"],
                    "key": "j",
                    "name": "Join session",
                    "icon": "remote", // FIXME
                    "type": "command",
                    "command": "liveshare.join",
                },
                {
                    //"keys": ["i", "when:liveshare.state != 'Joined' && liveshare.state != 'Shared'"],
                    "key": "i",
                    "name": "Invite participant",
                    "icon": "mail", // FIXME
                    "type": "command",
                    "command": "liveshare.inviteAvailableContacts",
                },
                {
                    //"keys": ["i", "when:liveshare.state != 'Joined' && liveshare.state != 'Shared'"],
                    "key": "I",
                    "name": "Focus on contact view",
                    "icon": "person",
                    "type": "command",
                    "command": "liveshare.contacts.focus",
                }
            ]
        },

        // @ shortcut for symbols
        {
            "keys": "@",
            "name": "Jump to symbol in buffer",
            "icon": "symbol-class",
            "type": "command",
            "command": "workbench.action.gotoSymbol"
        }
    ],

    /********** Appearance **********/
    "editor.cursorBlinking": "phase",
    "editor.cursorSurroundingLines": 2,
    "editor.fontFamily": "Iosevka",
    "editor.fontLigatures": "'dlig', 'cv93' 3",  // more ligatures, less weird %
    "editor.fontSize": 18,
    "terminal.integrated.fontFamily": "Iosevka Nerd Font",
    "editor.minimap.scale": 2,
    "editor.minimap.showSlider": "always",
    "editor.renderControlCharacters": true,
    "editor.renderLineHighlightOnlyWhenFocus": true,
    "editor.renderWhitespace": "trailing",
    "editor.bracketPairColorization.enabled": true,
    "editor.stickyScroll.enabled": true,
    // "editor.cursorSmoothCaretAnimation": true,
    "errorLens.fontFamily": "Iosevka Light",
    "errorLens.fontSize": "10pt",
    "errorLens.delay": 500,
    "errorLens.messageTemplate": "[1/$count] $message [$source] <$code>",
    "search.showLineNumbers": true,
    "vim.showMarksInGutter": true,
    "window.dialogStyle": "custom",
    "window.menuBarVisibility": "toggle",
    "workbench.colorTheme": "Gruvbox Dark Medium",
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.untitled.hint": "hidden",
    "workbench.iconTheme": "material-icon-theme",
    "material-icon-theme.folders.color": "#458588",
    "material-icon-theme.saturation": 0.5,
    "workbench.tree.indent": 16,
    "workbench.colorCustomizations": {
        // hide squiggly lines as we have errorLens
        "editorError.foreground": "#fff0",
        "editorWarning.foreground": "#fff0",
        "editorInfo.foreground": "#fff0",
        "[Gruvbox Dark Medium]": {
            // more contrast for overlays
            "quickInput.background": "#3c3836",
            "quickInputTitle.background": "#504945",
            "quickInputList.focusBackground": "#504945",
            "notifications.background": "#504945",
            "notifications.foreground": "#ebdbb2",
            "peekViewEditor.background": "#3c3836",
            "peekViewEditorGutter.background": "#504945",
            "peekViewResult.background": "#504945",
            "peekViewTitle.background": "#504945",
            // whitespaces
            "editorWhitespace.foreground": "#7c6f64",
            // UI separation
            "sideBar.background": "#3c3836",
            "panel.background": "#3c3836",
            "editorStickyScroll.background": "#3c3836",
            "editorStickyScrollHover.background": "#3c3836",
            // file browser keyboard usage
            "list.focusForeground": "#d3869b",
            "quickInputList.focusForeground": "#fbf1c7",
            // bracket pair colorization
            "editorBracketHighlight.foreground1": "#a89984",  // grey
            "editorBracketHighlight.foreground2": "#d79921",  // yellow
            "editorBracketHighlight.foreground3": "#b16286",  // purple
            "editorBracketHighlight.foreground4": "#458588",  // blue
            "editorBracketHighlight.foreground5": "#689d6a",  // aqua
            "editorBracketHighlight.foreground6": "#cc241d",  // red
        }
    },
    "customizeUI.stylesheet": {
        //// which-key styling
        // https://github.com/VSpaceCode/vscode-which-key/issues/37#issuecomment-842893215
        ".quick-input-widget > .quick-input-list > .monaco-list":
            "max-height: none !important;",
        ".quick-input-widget > .quick-input-list .codicon":
            "color: #83a598 !important; padding-right: 5px;",
        ".quick-input-widget > .quick-input-list .monaco-list-row[aria-label*=\" +\"] .label-description":
            "color: #8ec07c;",
        // ".quick-input-widget > .quick-input-list .monaco-list-rows":
        //    "display: grid !important; grid-template-columns: repeat(3, 1fr); grid-auto-rows: 1.5em;",
        // ".quick-input-widget > .quick-input-list .monaco-list-row":
        //    "position: unset !important;",

        //// statusbar icons
        "#workbench\\.parts\\.statusbar .codicon-error":
            "color: #cc241d !important;",  // red
        "#workbench\\.parts\\.statusbar .codicon-warning":
            "color: #d79921 !important;",  // yellow
        "#workbench\\.parts\\.statusbar .codicon-beaker":
            "color: #98971a !important;",  // green
        "#workbench\\.parts\\.statusbar .codicon-git-branch, .codicon-git-commit":
            "color: #689d6a !important",  // aqua
        "#workbench\\.parts\\.statusbar .codicon-sync":
            "color: #689d6a !important;",  // aqua
        "#workbench\\.parts\\.statusbar .codicon-cloud-upload":
            "color: #689d6a !important;",  // aqua
        "#workbench\\.parts\\.statusbar .codicon-bell, .codicon-bell-dot":
            "color: #689d6a !important;",  // aqua

        //// statusbar highlights
        "#status\\.editor\\.selection":
            "font-weight: bold !important;",

        //// vim mode styling
        // "#vscodevim\\.vim\\.primary":
        //    "border-radius: 3px !important",
        // "#vscodevim\\.vim\\.primary[aria-label=\"-- NORMAL --\"]":
        //    "background-color: #458588 !important;",
        "#vscodevim\\.vim\\.primary[aria-label=\"-- INSERT --\"]":
            "color: #98971a !important;",
        "#vscodevim\\.vim\\.primary[aria-label=\"-- VISUAL --\"]":
            "color: #b16286 !important;",
        "#vscodevim\\.vim\\.primary[aria-label^=\":\"], #vscodevim\\.vim[aria-label^=\"/\"], #vscodevim\\.vim[aria-label^=\"?\"]":
            "background-color: #d79921 !important; color: #282828 !important; font-weight: bold !important",
        "#asvetliakov\\.vscode-neovim[aria-label=\"-- INSERT --\"]":
            "background-color: #98971a !important;",
        "#asvetliakov\\.vscode-neovim[aria-label=\"-- VISUAL --\"]":
            "background-color: #b16286 !important;",

        //// muted links
        ".monaco-editor .detected-link, .monaco-editor .detected-link-active":
            "text-decoration: underline 1px #665c54 !important;"
    },
    "customizeUI.activityBar": "bottom", // note, 'top' interfers with VSpaceCode 'Tb'
    "customizeUI.activityBarHideSettings": true,
    "customizeUI.listRowHeight": 20,
    "customizeUI.font.monospace": "Iosevka",
    "customizeUI.font.regular": "Roboto Condensed",
    // "color-highlight.languages": [
    //     "*",
    //     "!restructuredtext",
    //     "!magit",
    //     "!git-commit",
    // ],
    "[python]": {
        "editor.rulers": [
            88
        ],
        //"editor.defaultFormatter": "ms-python.black-formatter"
    },
    /********** Behavior **********/
    "debug.console.closeOnEnd": true,
    "editor.find.autoFindInSelection": "multiline",
    "editor.mouseWheelZoom": true,
    "editor.tabCompletion": "on",
    "explorer.confirmDragAndDrop": false,
    "file-browser.hideIgnoredFiles": true,
    "file-browser.labelIgnoredFiles": true,
    "files.insertFinalNewline": true,
    "files.simpleDialog.enable": true,
    "keyboard.dispatch": "keyCode", // https://stackoverflow.com/a/50875402/2085149
    "search.smartCase": true,
    "search.useParentIgnoreFiles": true,
    "terminal.external.linuxExec": "kitty",
    "vim.camelCaseMotion.enable": true,
    //"vim.textwidth": 88,
    "workbench.startupEditor": "newUntitledFile",
    "codesnap.showWindowControls": false,
    "codesnap.shutterAction": "copy",
    "whichkey.delay": 1,
    "whichkey.sortOrder": "nonNumberFirst",
    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.perEditorGroup": true,
    "workbench.editor.limit.value": 3,
    /********** Privacy **********/
    "update.mode": "none",
    "telemetry.telemetryLevel": "off",
    "redhat.telemetry.enabled": false,
    "workbench.settings.enableNaturalLanguageSearch": false,
    /*********** Git **********/
    "git.autofetch": true,
    "magit.forge-enabled": true,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.currentLine.enabled": false,
    // "gitlens.codeLens.scopes": [
    //     "document",
    //     "containers",
    //     "blocks"
    // ],
    "gitlens.hovers.currentLine.enabled": false,
    //"github-actions.workflows.pinned.workflows": [
    //    ".github/workflows/build.yml",
    //    ".github/workflows/ci.yml"
    //],
    //"github-actions.workflows.pinned.refresh.enabled": true,
    "magit.quick-switch-enabled": true,
    //"remoteHub.search.download.enabled": true,
    /********** Python **********/
    // "python.analysis.diagnosticMode": "workspace",
    "python.formatting.provider": "black",
    "python.analysis.autoImportCompletions": false,
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.diagnosticSeverityOverrides": {
        "reportUnknownMemberType": "none",
        "reportUnknownArgumentType": "none",
        "reportUnknownVariableType": "none",
        "reportUnknownParameterType": "none",
        "reportUnknownLambdaType": "none",
        "reportUntypedFunctionDecorator": "none",

        //"reportMissingParameterType": "information",
        "reportMissingParameterType": "none",
        "reportUnusedVariable": "information",
    },
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "right"
    },
    // "python.analysis.memory.keepLibraryAst": true,

    // "pythonTestExplorer.testFramework": "pytest",
    // "python.testing.unittestEnabled": false,
    // "python.testing.nosetestsEnabled": false,
    // "python.testing.pytestEnabled": false,
    /********** LaTeX **********/
    "latex-workshop.latex.tools": [
        {
            "name": "latexmk",
            "command": "latexmk",
            "args": [
                "-shell-escape", // FIXME do we really want this globally?
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "-pdf",
                "-outdir=%OUTDIR%",
                "%DOC%"
            ],
            "env": {}
        },
        {
            "name": "lualatexmk",
            "command": "latexmk",
            "args": [
                "-shell-escape", // FIXME do we really want this globally?
              "-synctex=1",
              "-interaction=nonstopmode",
              "-file-line-error",
              "-lualatex",
              "-outdir=%OUTDIR%",
              "%DOC%"
            ],
            "env": {}
          },
    ],
    "latex-workshop.latex.recipe.default": "lastUsed",
    "latex-workshop.latex.autoBuild.run": "onSave",
    // https://github.com/James-Yu/LaTeX-Workshop/wiki/View#using-synctex-with-an-external-viewer
    "latex-workshop.view.pdf.viewer": "external",
    "latex-workshop.view.pdf.external.viewer.command": "zathura",
    "latex-workshop.view.pdf.external.viewer.args": [
        "--synctex-editor-command",
        "code --reuse-window -g \"%{input}:%{line}\"",
        "%PDF%"
    ],
    "latex-workshop.view.pdf.external.synctex.command": "zathura",
    "latex-workshop.view.pdf.external.synctex.args": [
        "--synctex-forward=%LINE%:0:%TEX%",
        "%PDF%"
    ],
    /********** rst **********/
    //"restructuredtext.languageServer.disabled": true,
    //"restructuredtext.sphinxBuildPath": "/usr/bin/sphinx-build",
    //"restructuredtext.linter.executablePath": "/usr/bin/rstcheck",
    /********** other languages **********/
    "monkeyC.developerKeyPath": "/home/florian/.Garmin/developer_key",
    "monkeyC.javaPath": "/usr/lib/jvm/java-17-openjdk",
    "monkeyC.typeCheckLevel": "Strict",
    "arduino.additionalUrls": [
        "https://raw.githubusercontent.com/keyboardio/arduino-kaleidoscope-master/main/package_kaleidoscope_master_index.json",
        "https://adafruit.github.io/arduino-board-index/package_adafruit_index.json",
    ],
    /********** Project Manager **********/
    "projectManager.groupList": true,
    "projectManager.git.baseFolders": [
        "~/proj/",
        "~/talks/",
        "~/talks/trainings",
        "~/hsr/",
    ],
    "projectManager.git.maxDepthRecursion": 2,
    /********** Other **********/
    "extensions.supportUntrustedWorkspaces": {
        // https://github.com/VSpaceCode/VSpaceCode/issues/202
        "vspacecode.vspacecode": { "supported": true },
        "vspacecode.whichkey": { "supported": true },
        // https://github.com/iocave/customize-ui/issues/98
        "iocave.monkey-patch": { "supported": true },
        "iocave.customize-ui": { "supported": true },
        // ?
        "asvetliakov.vscode-neovim": {"supported": true},
    },
    "dash.languageIdToDocsetMap": {
        "ansible": [
            "ansible"
        ],
        "python": [
            "python",
            "qt",
        ],
    },
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "editor.inlineSuggest.enabled": true,
    "window.zoomLevel": 1,
    //"coverage-gutter.showRulerCoverage": true,
    //"coverage-gutter.showLineCoverage": true,
    // "editor.suggestSelection": "first",
    // "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    // "editor.tabSize": 8,
    // "editor.cursorStyle": "line",
    // "editor.insertSpaces": false,
    // "editor.lineNumbers": "on",
    // "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
    // "editor.wordWrap": "off",
    // "workbench.colorCustomizations": {
    //     "statusBar.background": "#005f5f",
    //     "statusBar.noFolderBackground": "#005f5f",
    //     "statusBar.debuggingBackground": "#005f5f"
    // },
    // "yaml.customTags": [
    //     "!encrypted/pkcs1-oaep scalar",
    //     "!vault scalar"
    // ],
    // "indentRainbow.errorColor": "#cc241d20",
    // "indentRainbow.colors": [
    //     "#28282820",
    //     "#3c383620",
    //     "#50494520",
    //     "#665c5420",
    // ]
    // nvim experiment
    // "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
    "extensions.experimental.affinity": {
        "vscodevim.vim": 1,
        "asvetliakov.vscode-neovim": 1
    },
}
