{
    /********** VSpaceCode boilerplate **********/
    // https://github.com/VSpaceCode/VSpaceCode/blob/master/src/configuration/settings.jsonc
    "vim.easymotion": true, // Vim easymotion is required for Jump menu - <SPC> j
    // "vim.useSystemClipboard": true,
    // Trigger the main which key menu with in the active editor with vim
    // This cannot be put into keybindings.json because it will
    // create conflict with Vim.
    // https://github.com/stevenguh/spacecode/issues/3
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    /********** Custom VSpaceCode bindings **********/
    "vspacecode.bindingOverrides": [
        {
            "keys": "g.a",
            "name": "Apply",
            "icon": "gather",
            "type": "command",
            "command": "magit.apply-at-point",
        },
        {
            "keys": "g.A",
            "name": "+Cherry-pick",
            "icon": "gather",
            "type": "command",
            "command": "magit.cherry-picking",
        },
        {
            "keys": "g.b",
            "name": "+Branch",
            "icon": "git-branch",
            "type": "command",
            "command": "magit.branching",
        },
        {
            "keys": "g.c",
            "name": "+Commit",
            "icon": "git-commit",
            "type": "command",
            "command": "magit.commit",
        },
        {
            "keys": "g.d",
            "name": "+Diff",
            "icon": "diff",
            "type": "command",
            "command": "magit.diffing",
        },
        {
            "keys": "g.f",
            "name": "+Fetch",
            "icon": "repo-sync",
            "type": "command",
            "command": "magit.fetching",
        },
        {
            "keys": "g.F",
            "name": "+Pull",
            "icon": "repo-pull",
            "type": "command",
            "command": "magit.fetching",
        },
        {
            "keys": "g.I",
            "name": "+Ignore",
            "icon": "diff-ignored",
            "type": "command",
            "command": "magit.ignoring",
        },
        {
            "keys": "g.l",
            "name": "+Log",
            "icon": "list-flat",
            "type": "command",
            "command": "magit.logging",
        },
        {
            "keys": "g.m",
            "name": "+Merge",
            "icon": "git-merge",
            "type": "command",
            "command": "magit.merging",
        },
        {
            "keys": "g.M",
            "name": "+Remote",
            "icon": "cloud",
            "type": "command",
            "command": "magit.remoting",
        },
        {
            "keys": "g.P",
            "name": "+Push",
            "icon": "repo-push",
            "type": "command",
            "command": "magit.pushing",
        },
        {
            "keys": "g.r",
            "name": "+Rebase",
            "icon": "repo-forked",
            "type": "command",
            "command": "magit.rebasing",
        },
        {
            "keys": "g.s",
            //"name": "Stage",
            "name": "Stage File",
            "icon": "file-add",
            "type": "command",
            //"command": "magit.stage",
            "command": "magit.stage-file",
        },
        {
            "keys": "g.S",
            "name": "Stage All",
            "icon": "expand-all",
            "type": "command",
            "command": "magit.stage-all",
        },
        {
            "keys": "g.t",
            "name": "+Tag",
            "icon": "tag",
            "type": "command",
            "command": "magit.tagging",
        },
        {
            "keys": "g.u",
            //"name": "Unstage",
            "name": "Unstage File",
            "icon": "file",
            "type": "command",
            //"command": "magit.unstage",
            "command": "magit.unstage-file",
        },
        {
            "keys": "g.U",
            "name": "Unstage All",
            "icon": "collapse-all",
            "type": "command",
            "command": "magit.unstage-all",
        },
        {
            "keys": "g._",
            "name": "+Revert",
            "icon": "discard",
            "type": "command",
            "command": "magit.reverting",
        },
        {
            "keys": "g.O",
            "name": "+Reset",
            "icon": "trash",
            "type": "command",
            "command": "magit.resetting",
        },
        //{
        //    "keys": "g.x",
        //    "name": "Discard",
        //    "icon": "discard",
        //    "type": "command",
        //    "command": "magit.discard-at-point",
        //},
        {
            "keys": "g.y",
            "name": "+Show Refs",
            "icon": "clippy",
            "type": "command",
            "command": "vspacecode.showMagitRefMenu",
        },
        {
            "keys": "g.z",
            "name": "+Stash",
            "icon": "archive",
            "type": "command",
            "command": "magit.stashing",
        },
        {
            "keys": "g.!",
            "name": "+Run",
            "icon": "rocket",
            "type": "command",
            "command": "magit.running",
        },
        {
            "keys": "g.%",
            "name": "+Worktree",
            "icon": "list-tree",
            "type": "command",
            "command": "magit.worktree",
        },
        {
            "keys": "g.o",
            "name": "+Submodules",
            "icon": "file-submodule",
            "type": "command",
            "command": "magit.submodules",
        },
        {
            "keys": "g.$",
            "name": "Process Log",
            "icon": "output",
            "type": "command",
            "command": "magit.process-log",
        },

        {
            "keys": "g.B",
            "name": "+Blame",
            "icon": "organization",
            "type": "bindings",
            "bindings": [
                {
                    "key": "B",
                    "name": "Blame file with GitLens",
                    "type": "command",
                    "icon": "file",
                    "command": "gitlens.toggleFileBlame",
                },
                {
                    "key": "b",
                    "name": "Blame file with magit",
                    "type": "command",
                    "icon": "file",
                    "command": "magit.blame-file",
                },
            ]
        },
        {
            "keys": "g.L",
            "name": "View log graph",
            "type": "command",
            "icon": "git-commit",
            "command": "git-graph.view",
        },
        {
            "keys": "g.g",
            "name": "Magit status",
            "type": "command",
            "command": "magit.status",
            "icon": "rocket",
        },
        {
            "keys": "g.G",
            "name": "GitLens Commands",
            "type": "command",
            "command": "gitlens.gitCommands",
            "icon": "rocket",
        },
        {
            "keys": "g.Y",
            "name": "Yank link to GitHub",
            "type": "command",
            "command": "extension.gitHubUrl",
            "icon": "github",
        },

        {
            "keys": "h.z",
            "name": "Zeal for current text",
            "icon": "library",
            "type": "command",
            "command": "extension.dash.specific",
        },
        {
            "keys": "h.Z",
            "name": "Open Zeal",
            "type": "command",
            "icon": "library",
            "command": "extension.dash.emptySyntax",
        },
        {
            "keys": "p.o",
            "name": "Open folder",
            "icon": "folder-opened",
            "type": "command",
            "command": "workbench.action.files.openFolder",
        },
        {
            "keys": "f.y.i",
            "name": "Yank image (CodeSnap)",
            //"icon": "device-camera",
            "type": "command",
            "command": "codesnap.start",
        },

        // swap JSON/GUI settings
        {
            "keys": "f.e.D",
            "name": "Open settings",
            "icon": "settings-gear",
            "type": "command",
            "command": "workbench.action.openGlobalSettings"
        },
        {
            "keys": "f.e.K",
            "name": "Open global key bindings",
            "icon": "keyboard",
            "type": "command",
            "command": "workbench.action.openGlobalKeybindings"
        },
        {
            "keys": "f.e.W",
            "name": "Open workspace settings",
            "icon": "settings-edit",
            "type": "command",
            "command": "workbench.action.openWorkspaceSettings"
        },
        {
            "keys": "f.e.d",
            "name": "Open settings JSON",
            "icon": "json",
            "type": "command",
            "command": "workbench.action.openSettingsJson"
        },
        {
            "keys": "f.e.k",
            "name": "Open global key bindings JSON",
            "icon": "json",
            "type": "command",
            "command": "workbench.action.openGlobalKeybindingsFile"
        },
        {
            "keys": "f.e.w",
            "name": "Open workspace settings JSON",
            "icon": "json",
            "type": "command",
            "command": "workbench.action.openWorkspaceSettingsFile"
        },

        // Add extension binding
        {
            "keys": "f.e.e",
            "name": "Show extensions",
            "icon": "extensions",
            "type": "command",
            "command": "workbench.view.extensions"
        },
        {
            "keys": "f.e.E",
            "name": "Install extension from VSIX",
            "icon": "package",
            "type": "command",
            "command": "workbench.extensions.action.installVSIX"
        },

        // Python tests via test-explorer
        {
            "keys": ["m", "languageId:python", "t", "a"],
            "name": "Run all tests",
            "icon": "beaker",
            "type": "command",
            "command": "test-explorer.run-all",
        },
        {
            "keys": ["m", "languageId:python", "t", "b"],
            "name": "Run current test file",
            "icon": "file",
            "type": "command",
            "command": "test-explorer.run-file",
        },
        {
            "keys": ["m", "languageId:python", "t", "r"],
            "name": "Re-run tests",
            "icon": "refresh",
            "type": "command",
            "command": "test-explorer.rerun"
        },
        {
            "keys": ["m", "languageId:python", "t", "R"],
            "name": "Re-run tests in debugger",
            "icon": "bug",
            "type": "command",
            "command": "test-explorer.redebug"
        },
        {
            "keys": ["m", "languageId:python", "t", "t"],
            "name": "Run test under cursor",
            "icon": "whole-word",
            "type": "command",
            "command": "test-explorer.run-test-at-cursor"
        },
        {
            "keys": ["m", "languageId:python", "t", "T"],
            "name": "Debug test under cursor",
            "icon": "bug",
            "type": "command",
            "command": "test-explorer.debug-test-at-cursor"
        },
        {
            "keys": ["m", "languageId:python", "t", "c"],
            "name": "Cancel running tests",
            "icon": "close",
            "type": "command",
            "command": "test-explorer.cancel"
        },
        {
            "keys": ["m", "languageId:python", "t", "C"],
            "name": "Refresh tests",
            "icon": "refresh",
            "type": "command",
            "command": "test-explorer.refresh",
        },
        {
            "keys": ["m", "languageId:python", "t", "v"],
            "name": "Focus test explorer view",
            "icon": "eye",
            "type": "command",
            "command": "test-explorer.focus"
        },

        {
            "keys": [
                "m",
                "languageId:asciidoc"
            ],
            "name": "Asciidoc",
            "type": "bindings",
            "bindings": [
                {
                    "key": "p",
                    "name": "Show preview",
                    "type": "command",
                    "command": "asciidoc.showPreviewToSide",
                },
                {
                    "key": "P",
                    "name": "Show preview in new tab",
                    "type": "command",
                    "command": "asciidoc.showPreview",
                }
            ]
        },
        {
            "keys": "L",
            "name": "+Live Share",
            "icon": "live-share",
            "type": "bindings",
            "bindings": [
                {
                    //"keys": ["f", "when:liveshare:hasCollaborators"],
                    "key": "f",
                    "name": "Follow participant",
                    "icon": "pin",
                    "type": "conditional",
                    "bindings": [
                        {
                            "key": "!liveshare.isFollowing",
                            "name": "default",
                            "icon": "pin",
                            "type": "command",
                            "command": "liveshare.follow",
                        },
                        {
                            "key": "liveshare.isFollowing",
                            "name": "Unfollow participant",
                            "icon": "pinned",
                            "type": "command",
                            "command": "liveshare.unfollow",
                        }
                    ]
                },
                {
                    //"keys": ["/", "when:liveshare:hasCollaborators"],
                    "key": "/",
                    "name": "Follow participant to the side",
                    "icon": "pin",
                    "type": "command",
                    "command": "liveshare.followToTheSide",
                },
                {
                    //"keys": ["!", "when:liveshare:hasCollaborators"],
                    "key": "!",
                    "name": "Focus participants",
                    "icon": "megaphone",
                    "type": "command",
                    "command": "liveshare.focusParticipants",
                },
                {
                    "key": "s",
                    "name": "Start session",
                    "icon": "live-share",
                    "type": "command",
                    "command": "liveshare.start",
                },
                {
                    //"keys": ["j", "when:liveshare.state != 'Joined' && liveshare.state != 'Shared'"],
                    "key": "j",
                    "name": "Join session",
                    "icon": "remote", // FIXME
                    "type": "command",
                    "command": "liveshare.join",
                },
                {
                    //"keys": ["i", "when:liveshare.state != 'Joined' && liveshare.state != 'Shared'"],
                    "key": "i",
                    "name": "Invite participant",
                    "icon": "mail", // FIXME
                    "type": "command",
                    "command": "liveshare.inviteAvailableContacts",
                },
                {
                    //"keys": ["i", "when:liveshare.state != 'Joined' && liveshare.state != 'Shared'"],
                    "key": "I",
                    "name": "Focus on contact view",
                    "icon": "person",
                    "type": "command",
                    "command": "liveshare.contacts.focus",
                }
            ]
        },
    ],
    /********** Appearance **********/
    "editor.cursorBlinking": "phase",
    "editor.cursorSurroundingLines": 2,
    "editor.fontFamily": "Iosevka",
    "editor.fontLigatures": true,
    "editor.fontSize": 18,
    "editor.inlineHints.fontFamily": "Iosevka Light",
    "terminal.integrated.fontFamily": "Iosevka Nerd Font",
    "editor.minimap.scale": 2,
    "editor.minimap.showSlider": "always",
    "editor.renderControlCharacters": true,
    "editor.renderLineHighlightOnlyWhenFocus": true,
    "editor.renderWhitespace": "trailing",
    // "editor.cursorSmoothCaretAnimation": true,
    "errorLens.fontFamily": "Iosevka Light",
    "errorLens.fontSize": "10pt",
    "errorLens.delay": 500,
    "errorLens.addNumberOfDiagnostics": true,
    "testExplorer.errorDecoration": false,
    "search.showLineNumbers": true,
    "vim.showMarksInGutter": true,
    "window.dialogStyle": "custom",
    "window.menuBarVisibility": "toggle",
    "workbench.colorTheme": "Gruvbox Dark Medium",
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.editor.untitled.hint": "hidden",
    "workbench.iconTheme": "material-icon-theme",
    "material-icon-theme.folders.color": "#458588",
    "workbench.tree.indent": 16,
    "workbench.colorCustomizations": {
        // hide squiggly lines as we have errorLens
        "editorError.foreground": "#fff0",
        "editorWarning.foreground": "#fff0",
        "editorInfo.foreground": "#fff0",
        "[Gruvbox Dark Medium]": {
            // more contrast for overlays
            "quickInput.background": "#3c3836",
            "quickInputTitle.background": "#504945",
            "quickInputList.focusBackground": "#504945",
            "notifications.background": "#7c6f64",
            "notifications.foreground": "#ebdbb2",
            "peekViewEditor.background": "#3c3836",
            "peekViewEditorGutter.background": "#504945",
            "peekViewResult.background": "#504945",
            "peekViewTitle.background": "#504945",
            // UI separation
            "sideBar.background": "#3c3836",
            "panel.background": "#3c3836",
            // file browser keyboard usage
            "list.focusForeground": "#689d6a",
        }
    },
    "customizeUI.stylesheet": {
        //// which-key styling
        // https://github.com/VSpaceCode/vscode-which-key/issues/37#issuecomment-842893215
        ".quick-input-widget > .quick-input-list > .monaco-list":
            "max-height: none !important;",
        ".quick-input-widget > .quick-input-list .codicon":
            "color: #83a598; padding-right: 5px;",
        ".quick-input-widget > .quick-input-list .monaco-list-row[aria-label*=\"  +\"] .label-description":
            "color: #8ec07c;",
        // ".quick-input-widget > .quick-input-list .monaco-list-rows":
        //    "display: grid !important; grid-template-columns: repeat(3, 1fr); grid-auto-rows: 1.5em;",
        // ".quick-input-widget > .quick-input-list .monaco-list-row":
        //    "position: unset !important;",

        //// statusbar icons
        "#workbench\\.parts\\.statusbar .codicon-error":
            "color: #cc241d !important;",  // red
        "#workbench\\.parts\\.statusbar .codicon-warning":
            "color: #d79921 !important;",  // yellow
        "#workbench\\.parts\\.statusbar .codicon-beaker":
            "color: #98971a !important;",  // green
        "#workbench\\.parts\\.statusbar .codicon-git-branch, .codicon-git-commit":
            "color: #689d6a !important",  // aqua
        "#workbench\\.parts\\.statusbar .codicon-sync":
            "color: #689d6a !important;",  // aqua
        "#workbench\\.parts\\.statusbar .codicon-cloud-upload":
            "color: #689d6a !important;",  // aqua
        "#workbench\\.parts\\.statusbar .codicon-bell, .codicon-bell-dot":
            "color: #689d6a !important;",  // aqua

        //// statusbar highlights
        "#status\\.editor\\.selection":
            "font-weight: bold !important;",

        //// vim mode styling
        // "#vscodevim\\.vim":
        //    "border-radius: 3px !important",
        // "#vscodevim\\.vim[aria-label=\"-- NORMAL --\"]":
        //    "background-color: #458588 !important;",
        "#vscodevim\\.vim[aria-label=\"-- INSERT --\"]":
            "color: #98971a !important;",
        "#vscodevim\\.vim[aria-label=\"-- VISUAL --\"]":
            "color: #b16286 !important;",
        "#vscodevim\\.vim[aria-label^=\":\"], #vscodevim\\.vim[aria-label^=\"/\"], #vscodevim\\.vim[aria-label^=\"?\"]":
            "background-color: #d79921 !important; color: #282828 !important; font-weight: bold !important",
    },
    "customizeUI.activityBar": "bottom", // note, 'top' interfers with VSpaceCode 'Tb'
    "customizeUI.activityBarHideSettings": true,
    "customizeUI.listRowHeight": 20,
    "customizeUI.font.monospace": "Iosevka",
    //"customizeUI.font.regular": "Iosevka",
    "color-highlight.languages": [
        "*",
        "!restructuredtext",
        "!magit",
        "!git-commit",
    ],
    "[python]": { "editor.rulers": [88] },
    /********** Behavior **********/
    "debug.console.closeOnEnd": true,
    "editor.find.autoFindInSelection": "multiline",
    "editor.mouseWheelZoom": true,
    "editor.tabCompletion": "on",
    "file-browser.hideIgnoredFiles": true,
    "file-browser.labelIgnoredFiles": true,
    "files.insertFinalNewline": true,
    "files.simpleDialog.enable": true,
    "keyboard.dispatch": "keyCode", // https://stackoverflow.com/a/50875402/2085149
    "search.smartCase": true,
    "terminal.external.linuxExec": "kitty",
    "vim.camelCaseMotion.enable": true,
    //"vim.textwidth": 88,
    "workbench.startupEditor": "newUntitledFile",
    "codesnap.showWindowControls": false,
    "codesnap.shutterAction": "copy",
    "whichkey.delay": 1,
    "latex-workshop.latex.autoBuild.run": "onSave",
    /********** Privacy **********/
    "update.mode": "none",
    "telemetry.enableCrashReporter": false,
    "telemetry.enableTelemetry": false,
    "workbench.settings.enableNaturalLanguageSearch": false,
    /*********** Git **********/
    "git.autofetch": true,
    "magit.forge-enabled": true,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.currentLine.enabled": false,
    // "gitlens.codeLens.scopes": [
    //     "document",
    //     "containers",
    //     "blocks"
    // ],
    "gitlens.hovers.currentLine.enabled": false,
    "github-actions.workflows.pinned.workflows": [
        ".github/workflows/build.yml",
        ".github/workflows/ci.yml"
    ],
    "github-actions.workflows.pinned.refresh.enabled": true,
    "magit.quick-switch-enabled": true,
    /********** Python **********/
    "python.useIsolation": false, // for pytest to find qutebrowser package
    "python.showStartPage": false,
    // "python.analysis.diagnosticMode": "workspace",
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.diagnosticSeverityOverrides": {
        "reportUnknownMemberType": "none",
        "reportUnknownArgumentType": "none",
        "reportUnknownVariableType": "none",
        "reportUnknownParameterType": "none",
        "reportUntypedFunctionDecorator": "none",
    },
    // "python.analysis.memory.keepLibraryAst": true,

    // "pythonTestExplorer.testFramework": "pytest",
    // "python.testing.unittestEnabled": false,
    // "python.testing.nosetestsEnabled": false,
    // "python.testing.pytestEnabled": false,
    /********** LaTeX **********/
    "latex-workshop.latex.tools": [
        {
            "name": "latexmk",
            "command": "latexmk",
            "args": [
                "-shell-escape", // FIXME do we really want this globally?
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "-pdf",
                "-outdir=%OUTDIR%",
                "%DOC%"
            ],
            "env": {}
        },
    ],
    // https://github.com/James-Yu/LaTeX-Workshop/wiki/View#using-synctex-with-an-external-viewer
    "latex-workshop.view.pdf.viewer": "external",
    "latex-workshop.view.pdf.external.viewer.command": "zathura",
    "latex-workshop.view.pdf.external.viewer.args": [
        "--synctex-editor-command",
        "code --reuse-window -g \"%{input}:%{line}\"",
        "%PDF%"
    ],
    "latex-workshop.view.pdf.external.synctex.command": "zathura",
    "latex-workshop.view.pdf.external.synctex.args": [
        "--synctex-forward=%LINE%:0:%TEX%",
        "%PDF%"
    ],
    /********** Dash/Zeal **********/
    "dash.languageIdToDocsetMap": {
        "ansible": [
            "ansible"
        ],
        "python": [
            "python",
            "qt",
        ],
    },
    /********** Other **********/
    "extensions.supportUntrustedWorkspaces": {
        "vspacecode.vspacecode": { "supported": true },
        "vspacecode.whichkey": { "supported": true },
        "iocave.monkey-patch": { "supported": true },
        "iocave.customize-ui": { "supported": true },
    },
    /********** Unknown **********/
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter.notebook.ipynb"
    },
    // "editor.tabSize": 8,
    // "editor.cursorStyle": "line",
    // "editor.insertSpaces": false,
    // "editor.lineNumbers": "on",
    // "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
    // "editor.wordWrap": "off",
    // "workbench.colorCustomizations": {
    //     "statusBar.background": "#005f5f",
    //     "statusBar.noFolderBackground": "#005f5f",
    //     "statusBar.debuggingBackground": "#005f5f"
    // },
    // "yaml.customTags": [
    //     "!encrypted/pkcs1-oaep scalar",
    //     "!vault scalar"
    // ],
    // "indentRainbow.errorColor": "#cc241d20",
    // "indentRainbow.colors": [
    //     "#28282820",
    //     "#3c383620",
    //     "#50494520",
    //     "#665c5420",
    // ],
}
