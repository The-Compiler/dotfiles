#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

modbind() {
    key=$1
    shift
    hc keybind Mod4-$key "$@"
    #hc keybind Mod1-$key "$@"
}

hc emit_hook reload

xsetroot -solid black

# remove all existing keybindings
hc keyunbind --all

# keybindings
Mod=Mod4   # Use the super key as the main modifier

modbind Shift-q quit
modbind Shift-r reload
modbind Shift-c close
modbind Return spawn ${TERMINAL:-xterm}

# basic movement
# focusing clients
modbind Left  focus left
modbind Down  focus down
modbind Up    focus up
modbind Right focus right
modbind h     focus left
modbind j     focus down
modbind k     focus up
modbind l     focus right

# moving clients
modbind Shift-Left  shift left
modbind Shift-Down  shift down
modbind Shift-Up    shift up
modbind Shift-Right shift right
modbind Shift-h     shift left
modbind Shift-j     shift down
modbind Shift-k     shift up
modbind Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
modbind u       split   bottom  0.5
modbind o       split   right   0.5
# let the current frame explode into subframes
modbind Control-space split explode

# resizing frames
resizestep=0.05
modbind Control-h       resize left +$resizestep
modbind Control-j       resize down +$resizestep
modbind Control-k       resize up +$resizestep
modbind Control-l       resize right +$resizestep
modbind Control-Left    resize left +$resizestep
modbind Control-Down    resize down +$resizestep
modbind Control-Up      resize up +$resizestep
modbind Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        modbind $key use_index "$i"
        modbind Shift-$key move_index "$i"
    fi
done

# cycle through tags
hc keybind Shift-$Mod-Prior spawn hlwm-tagswitch prev
hc keybind Shift-$Mod-Next spawn hlwm-tagswitch next
modbind Prior use_index -1
modbind Next use_index +1

# layouting
modbind r remove
modbind s floating toggle
modbind f fullscreen toggle
modbind p pseudotile toggle
modbind Shift-f set_attr clients.focus.floating toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
modbind space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
modbind BackSpace   cycle_monitor
modbind Tab         cycle_all +1
modbind Shift-Tab   cycle_all -1
modbind c cycle
modbind i jumpto urgent

# utility keys
hc keybind XF86MonBrightnessUp spawn yoga-brightness up
hc keybind XF86MonBrightnessDown spawn yoga-brightness down
hc keybind XF86Tools chain , spawn physlock -s , spawn systemctl suspend
hc keybind Shift-XF86Tools spawn systemctl suspend
hc keybind XF86Search spawn physlock -s
modbind d spawn rofi -m -4 -show run
modbind Shift-d spawn rofi -m -4 -show drun -show-icons
modbind w spawn rofi -m -4 -show window
modbind Shift-w spawn hlwm-bring
modbind n spawn rofi-netctl
modbind y spawn utf8select
modbind Shift-y spawn rofimoji
modbind Multi_key spawn gscreenshot
hc keybind XF86Explorer spawn guake -t

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 1
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 5
hc set frame_gap 4

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# Multimedia keys
hc keybind XF86AudioLowerVolume spawn yoga-volume decrease
hc keybind XF86AudioRaiseVolume spawn yoga-volume increase
hc keybind XF86AudioMute spawn yoga-volume mute

hc keybind XF86AudioPlay spawn playerctl play-pause
hc keybind XF86AudioPrev spawn playerctl previous
hc keybind XF86AudioNext spawn playerctl next

# rules
hc unrule -F
hc rule focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
# hc rule windowrole=GtkFileChooserDialog pseudotile=off  # Don't pseudotile file chooser dialogs
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class=qutebrowser windowtype='_NET_WM_WINDOW_TYPE_UTILITY' floating=on
hc rule instance=guake floating=on

hc set tree_style '╾│ ├└╼─┐'

hc unlock

# start the panel
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    barpyrus $monitor &
done

# autorun stuff
[[ -z "$HLWM_LOADED" ]] && ~/.config/herbstluftwm/autorun &
hc setenv HLWM_LOADED 1
hc setenv QT_AUTO_SCREEN_SCALE_FACTOR 0
