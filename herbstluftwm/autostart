#!/usr/bin/env bash

handle_error() {
    trap '' ERR
    local frame=0 str
    local stacktrace="Command exited with status $1\n\nStack:"
    while str=$(caller $frame); do
        stacktrace+="\nline $str"
        frame=$((frame+1))
    done
    notify-send -u critical "hlwm config error" "$stacktrace"
}
set -o errtrace
trap 'handle_error $?' ERR

hc() {
    herbstclient "$@"
}

modbind() {
    key=$1
    shift
    is_xephyr && Mod=Mod1 || Mod=Mod4  # Alt/Super
    hc keybind $Mod-$key "$@"
}

is_first_start() {
    ! hc silent get_attr my_loaded 2>/dev/null
}

is_xephyr() {
    [[ $DISPLAY == :99 ]]
}

hc emit_hook reload

# FIXME why does this not work OOTB?
hc setenv PATH ~/bin:"$PATH"

if is_first_start; then
    picom &
fi

# xsetroot -solid black
feh --bg-fill ~/img/wallpapers/abstract.png

# remove all existing keybindings
hc keyunbind --all

# keybindings
modbind Shift-space spawn metarofi
modbind Shift-q spawn rofi-power 'herbstclient quit'
modbind Shift-r reload
modbind Shift-c close
modbind Return spawn ${TERMINAL:-xterm}

# basic movement
# focusing clients
modbind Left  focus left
modbind Down  focus down
modbind Up    focus up
modbind Right focus right
modbind h     focus left
modbind j     focus down
modbind k     focus up
modbind l     focus right

# moving clients
modbind Shift-Left  shift left
modbind Shift-Down  shift down
modbind Shift-Up    shift up
modbind Shift-Right shift right
modbind Shift-h     shift left
modbind Shift-j     shift down
modbind Shift-k     shift up
modbind Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
modbind u       split   bottom  0.5
modbind o       split   right   0.5
# let the current frame explode into subframes
modbind Control-space split explode

# resizing frames
resizestep=0.05
modbind Control-h       resize left +$resizestep
modbind Control-j       resize down +$resizestep
modbind Control-k       resize up +$resizestep
modbind Control-l       resize right +$resizestep
modbind Control-Left    resize left +$resizestep
modbind Control-Down    resize down +$resizestep
modbind Control-Up      resize up +$resizestep
modbind Control-Right   resize right +$resizestep

# Add tags on first start
if is_first_start; then
    tag_names=( {1..9} )
    hc rename default "${tag_names[0]}" || true
    for i in "${!tag_names[@]}"; do
        hc add "${tag_names[$i]}"
    done
    hc detect_monitors
fi

# Always bind keys to tags
tag_keys=( {1..9} 0 )
tag_count=$(hc attr tags.count)
for i in "${!tag_keys[@]}"; do
    (( i >= tag_count )) && break
    key="${tag_keys[$i]}"
    modbind "$key" use_index "$i"
    modbind "Shift-$key" move_index "$i"
done

# cycle through tags
modbind comma spawn hlwm-tagswitch prev
modbind period spawn hlwm-tagswitch next
modbind Shift-comma use_index -1
modbind Shift-period use_index +1

# layouting
modbind r remove
modbind p pseudotile toggle

modbind s floating toggle
modbind Shift-s set_attr clients.focus.floating toggle

modbind f spawn /usr/share/doc/herbstluftwm/examples/maximize.sh

fullscreen_cmd=(
and
  # toggle the fullscreen state
  : fullscreen toggle
  # if it's become fullscreen
  : compare clients.focus.fullscreen = true
  # then go through all clients
  : substitute CURTAG tags.focus.name
    substitute CURCLIENT clients.focus.winid
    foreach C clients. and
      # only consider other clients
      , sprintf WINID '%c.winid' C compare WINID != CURCLIENT
      # only consider clients in fullscreen
      , sprintf FS '%c.fullscreen' C compare FS = true
      # and only consider clients on the same tag
      , sprintf TAG '%c.tag' C compare TAG = CURTAG
      # if there is another fs client on the same tag, then
      # 1. undo the fullscreen
      , set_attr clients.focus.fullscreen false
      # 2. show a warning notification including the other fs client's title
      , sprintf TITLE_ATTR '%c.title' C
        sprintf TITLE 'Window %s' TITLE_ATTR
        spawn notify-send TITLE 'is already fullscreen'
)
modbind Shift-f "${fullscreen_cmd[@]}"
#modbind Shift-f fullscreen toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
modbind space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
is_xephyr && Mod=Mod1 || Mod=Mod4  # Alt/Super
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
modbind BackSpace   cycle_monitor
modbind Tab         cycle_all +1
modbind Shift-Tab   cycle_all -1
modbind c cycle
modbind i jumpto urgent

# utility keys
hc keybind XF86MonBrightnessUp spawn brightnessctl set +5
hc keybind XF86MonBrightnessDown spawn brightnessctl set 5-
hc keybind XF86Display spawn rofi-xrandr
hc keybind XF86Favorites spawn tp-lock
hc keybind Shift+XF86Favorites spawn systemctl suspend

modbind d spawn rofi -show drun -modi drun,run -show-icons
modbind Shift-d spawn rofi -show run -modi drun,run
modbind w spawn rofi -show window -modi window -show-icons
modbind Shift-w spawn hlwm-bring
modbind grave spawn hlwm-namenstag
modbind n spawn networkmanager_dmenu
modbind y spawn utf8select
modbind Shift-y spawn rofimoji
modbind p spawn keepmenu
modbind Shift-p spawn flameshot gui

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc attr theme.title_font '-*-*-*-*-*-*-10-*-*-*-*-*-*-*'
hc attr theme.title_height 10
hc attr theme.title_color '#ebdbb2'


#hc set frame_bg_normal_color '#282828'
#hc set frame_bg_active_color '#282828'
hc set frame_border_normal_color '#282828'
hc set frame_border_active_color '#fb4934'
hc set frame_border_width 2
hc set always_show_frame 1
hc set frame_bg_transparent 1
# hc set frame_transparent_width 5
hc set frame_gap 4
# hc set frame_active_opacity 1
# hc set frame_normal_opacity 0.5
hc set hide_covered_windows true

hc attr theme.active.color '#d65d0e'
hc attr theme.normal.color '#3c3836'

hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
# hc attr theme.active.inner_color '#3E4A00'
# hc attr theme.active.outer_color '#3E4A00'
# hc attr theme.background_color '#141414'
# hc set window_border_active_color '#8ec07c'
# hc set window_border_normal_color '#3c3836'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc attr monitors.tag_selection_strategy only_empty

# Multimedia keys
hc keybind XF86AudioLowerVolume spawn pavolume-dunst decrease 5
hc keybind XF86AudioRaiseVolume spawn pavolume-dunst increase 5
hc keybind Shift-XF86AudioLowerVolume spawn pavolume-dunst decrease 5 --allow-boost
hc keybind Shift-XF86AudioRaiseVolume spawn pavolume-dunst increase 5 --allow-boost
hc keybind XF86AudioMute spawn pavolume-dunst mute

hc keybind XF86AudioPlay spawn playerctl play-pause
hc keybind XF86AudioPrev spawn playerctl previous
hc keybind XF86AudioNext spawn playerctl next

# rules
hc unrule -F
hc rule focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
# hc rule windowrole=GtkFileChooserDialog pseudotile=off  # Don't pseudotile file chooser dialogs
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class=qutebrowser windowtype='_NET_WM_WINDOW_TYPE_UTILITY' floating=on
hc rule instance=guake floating=on

hc set tree_style '╾│ ├└╼─┐'

# start the panel on each monitor
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    barpyrus $monitor &
done

if is_first_start && ! is_xephyr; then
    hc new_attr bool my_loaded true

    xinput disable 'SYNA8022:00 06CB:CE67 Touchpad' &
    # guake -e 'journalctl -f -n 200' &

    dunst &
    # xss-lock tp-lock &
    # mate-power-manager &

    # nm-applet &
    # pasystray &
    # hp-systray &
    # udiskie &
    # blueman &
    # redshift-gtk &
    # kdeconnect-indicator &
    # /usr/lib/geoclue-2.0/demos/agent &
    # /usr/lib/polkit-kde-authentication-agent-1 &  # for VS code monkeypatch
    lxqt-policykit-agent &
    # ~/proj/Model01-Firmware/hlwm-tags.py &
fi

hc unlock
